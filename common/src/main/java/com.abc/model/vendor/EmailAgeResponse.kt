package com.abc.model.vendor

import com.abc.model.VendorResponse
import java.util.*

class EmailAgeResponse (val query: Query = Query(),
                        val responseStatus: ResponseStatus = ResponseStatus(),
                        uuid: UUID = UUID.randomUUID(), userId: String = "") : VendorResponse(uuid, userId)

data class Query(val email: String = "",
                 val queryType: String = "",
                 val count: Int = 0,
                 val created: String = "",
                 val lang: String = "",
                 val responseCount: String = "",
                 val results: List<Results> = emptyList())

data class Results(val email: String = "",
                   val ipaddress: String = "",
                   val eName: String = "",
                   val emailAge: String = "",
                   val domainAge: String = "",
                   val firstVerificationDate: String = "",
                   val lastVerificationDate: String = "",
                   val status: String = "",
                   val country: String = "",
                   val fraudRisk: String = "",
                   val EAScore: String = "",
                   val EAReason: String = "",
                   val EAStatusID: String = "",
                   val EAReasonID: String = "",
                   val EAAdviceID: String = "",
                   val EAAdvice: String = "",
                   val EARiskBandID: String = "",
                   val EARiskBand: String = "",
                   val source_industry: String = "",
                   val fraud_type: String = "",
                   val location: String = "",
                   val smfriends: String = "",
                   val totalhits: String = "",
                   val uniquehits: String = "",
                   val imageurl: String = "",
                   val emailExists: String = "",
                   val domainExists: String = "",
                   val company: String = "",
                   val title: String = "",
                   val domainname: String = "",
                   val domaincompany: String = "",
                   val domaincountryname: String = "",
                   val domaincategory: String = "",
                   val domaincorporate: String = "",
                   val domainrisklevel: String = "",
                   val domainrelevantinfo: String = "",
                   val domainrisklevelID: String = "",
                   val domainrelevantinfoID: String = "",
                   val ip_risklevelid: String = "",
                   val ip_risklevel: String = "",
                   val ip_riskreasonid: String = "",
                   val ip_riskreason: String = "",
                   val ip_reputation: String = "",
                   val ip_anonymousdetected: String = "",
                   val ip_isp: String = "",
                   val ip_org: String = "",
                   val ip_userType: String = "",
                   val ip_netSpeedCell: String = "",
                   val ip_corporateProxy: String = "",
                   val ip_continentCode: String = "",
                   val ip_country: String = "",
                   val ip_countryCode: String = "",
                   val ip_region: String = "",
                   val ip_city: String = "",
                   val ip_callingcode: String = "",
                   val ip_metroCode: String = "",
                   val ip_latitude: String = "",
                   val ip_longitude: String = "",
                   val ip_map: String = "",
                   val ipcountrymatch: String = "",
                   val ipriskcountry: String = "",
                   val ipdistancekm: String = "",
                   val ipdistancemil: String = "",
                   val ipaccuracyradius: String = "",
                   val iptimezone: String = "",
                   val ipasnum: String = "",
                   val ipdomain: String = "",
                   val custphoneInbillingloc: String = "",
                   val shipforward: String = "",
                   val citypostalmatch: String = "",
                   val shipcitypostalmatch: String = "",
                   val smlinks: List<Any> = emptyList())

data class ResponseStatus(val status: String = "", val errorCode: String = "", val description: String = "")
